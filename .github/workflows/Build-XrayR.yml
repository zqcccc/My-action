# name: Build-XrayR

# on:
#   workflow_dispatch:
# jobs:
#   build:
#     strategy:
#       matrix:
#         # Include amd64 on all platforms.
#         goos: [windows, freebsd, openbsd, linux, dragonfly, darwin]
#         goarch: [amd64, 386]
#         exclude:
#           # Exclude i386 on darwin and dragonfly.
#           - goarch: 386
#             goos: dragonfly
#           - goarch: 386
#             goos: darwin
#           - goarch: 386
#             goos: openbsd
#         include:
#           # BEIGIN MacOS ARM64
#           - goos: darwin
#             goarch: arm64
#           # END MacOS ARM64
#           # BEGIN Linux ARM 5 6 7
#           - goos: linux
#             goarch: arm
#             goarm: 7
#           - goos: linux
#             goarch: arm
#             goarm: 6
#           - goos: linux
#             goarch: arm
#             goarm: 5
#           # END Linux ARM 5 6 7
#           # BEGIN Android ARM 8
#           - goos: android
#             goarch: arm64
#           # END Android ARM 8
#           # BEGIN Other architectures
#           # BEGIN riscv64 & ARM64
#           - goos: linux
#             goarch: arm64
#           - goos: linux
#             goarch: riscv64
#           # END riscv64 & ARM64
#           # BEGIN MIPS
#           - goos: linux
#             goarch: mips64
#           - goos: linux
#             goarch: mips64le
#           - goos: linux
#             goarch: mipsle
#           - goos: linux
#             goarch: mips
#           # END MIPS
#           # BEGIN PPC
#           - goos: linux
#             goarch: ppc64
#           - goos: linux
#             goarch: ppc64le
#           # END PPC
#           # BEGIN FreeBSD ARM
#           - goos: freebsd
#             goarch: arm64
#           - goos: freebsd
#             goarch: arm
#             goarm: 7
#           # END FreeBSD ARM
#           # BEGIN S390X
#           - goos: linux
#             goarch: s390x
#           # END S390X
#           # END Other architectures
#       fail-fast: false

#     runs-on: ubuntu-latest
#     env:
#       GOOS: ${{ matrix.goos }}
#       GOARCH: ${{ matrix.goarch }}
#       GOARM: ${{ matrix.goarm }}
#       CGO_ENABLED: 0
#     steps:
#       - name: Checkout codebase
#         uses: actions/checkout@v2
#         with:
#           repository: XrayR-project/XrayR

#       - name: Show workflow information
#         id: get_filename
#         run: |
#           export _NAME=$(jq ".[\"$GOOS-$GOARCH$GOARM$GOMIPS\"].friendlyName" -r < .github/build/friendly-filenames.json)
#           echo "GOOS: $GOOS, GOARCH: $GOARCH, GOARM: $GOARM, GOMIPS: $GOMIPS, RELEASE_NAME: $_NAME"
#           echo "::set-output name=ASSET_NAME::$_NAME"
#           echo "ASSET_NAME=$_NAME" >> $GITHUB_ENV

#       - name: Set up Go
#         uses: actions/setup-go@v2
#         with:
#           go-version: 1.17.5

#       - name: Build Binary File
#         run: |
#           sudo apt update -qq
#           sudo apt install -qq upx
#           go mod download
#           mkdir -p build_assets
#           go build -v -o build_assets/XrayR -trimpath -ldflags "-s -w -buildid=" ./main
#           upx -9 -q build_assets/XrayR || echo "Unsupport UPX. Skip"

#       - name: Build Mips softfloat XrayR
#         if: matrix.goarch == 'mips' || matrix.goarch == 'mipsle'
#         run: |
#           GOMIPS=softfloat go build -v -o build_assets/XrayR_softfloat -trimpath -ldflags "-s -w -buildid=" ./main
#           upx -9 -q build_assets/XrayR_softfloat || echo "Unsupport UPX. Skip"

#       - name: Rename Windows XrayR
#         if: matrix.goos == 'windows'
#         run: |
#           cd ./build_assets || exit 1
#           mv XrayR XrayR.exe

#       - name: Create ZIP archive
#         shell: bash
#         run: |
#           pushd build_assets || exit 1
#           touch -mt $(date +%Y01010000) *
#           zip -9vr ../XrayR-$ASSET_NAME.zip .
#           popd || exit 1
#           FILE=./XrayR-$ASSET_NAME.zip
#           DGST=$FILE.dgst
#           for METHOD in {"md5","sha1","sha256","sha512"}
#           do
#             openssl dgst -$METHOD $FILE | sed 's/([^)]*)//g' >>$DGST
#           done
#       - name: Change the name
#         run: |
#           mv build_assets XrayR-$ASSET_NAME

#       - name: Upload ZIP archive to Download Station
#         run: |
#           curl -F "token=${{ secrets.UPLOAD_TOKEN }}" -F "location=Software/XrayR" -F "file=@XrayR-$ASSET_NAME.zip" -F "unzip=false" ${{ secrets.MAIN_UPLOAD_PROCESSOR }}
